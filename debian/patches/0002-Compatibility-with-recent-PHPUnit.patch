From: =?utf-8?q?David_Pr=C3=A9vot?= <taffit@debian.org>
Date: Thu, 27 Jun 2019 12:35:02 -1000
Subject: Compatibility with recent PHPUnit

---
 tests/Hamcrest/Core/CombinableMatcherTest.php          | 2 +-
 tests/Hamcrest/Core/IsInstanceOfTest.php               | 2 +-
 tests/Hamcrest/Core/SetTest.php                        | 2 +-
 tests/Hamcrest/FeatureMatcherTest.php                  | 2 +-
 tests/Hamcrest/MatcherAssertTest.php                   | 2 +-
 tests/Hamcrest/StringDescriptionTest.php               | 2 +-
 tests/Hamcrest/Text/IsEqualIgnoringWhiteSpaceTest.php  | 2 +-
 tests/Hamcrest/Text/StringContainsIgnoringCaseTest.php | 2 +-
 tests/Hamcrest/Text/StringContainsInOrderTest.php      | 2 +-
 tests/Hamcrest/Text/StringContainsTest.php             | 2 +-
 tests/Hamcrest/Text/StringEndsWithTest.php             | 2 +-
 tests/Hamcrest/Text/StringStartsWithTest.php           | 2 +-
 tests/Hamcrest/Xml/HasXPathTest.php                    | 2 +-
 13 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/tests/Hamcrest/Core/CombinableMatcherTest.php b/tests/Hamcrest/Core/CombinableMatcherTest.php
index 4c22614..235cba8 100644
--- a/tests/Hamcrest/Core/CombinableMatcherTest.php
+++ b/tests/Hamcrest/Core/CombinableMatcherTest.php
@@ -7,7 +7,7 @@ class CombinableMatcherTest extends \Hamcrest\AbstractMatcherTest
     private $_either_3_or_4;
     private $_not_3_and_not_4;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_either_3_or_4 = \Hamcrest\Core\CombinableMatcher::either(equalTo(3))->orElse(equalTo(4));
         $this->_not_3_and_not_4 = \Hamcrest\Core\CombinableMatcher::both(not(equalTo(3)))->andAlso(not(equalTo(4)));
diff --git a/tests/Hamcrest/Core/IsInstanceOfTest.php b/tests/Hamcrest/Core/IsInstanceOfTest.php
index 7a5f095..bb3dcb3 100644
--- a/tests/Hamcrest/Core/IsInstanceOfTest.php
+++ b/tests/Hamcrest/Core/IsInstanceOfTest.php
@@ -7,7 +7,7 @@ class IsInstanceOfTest extends \Hamcrest\AbstractMatcherTest
     private $_baseClassInstance;
     private $_subClassInstance;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_baseClassInstance = new \Hamcrest\Core\SampleBaseClass('good');
         $this->_subClassInstance = new \Hamcrest\Core\SampleSubClass('good');
diff --git a/tests/Hamcrest/Core/SetTest.php b/tests/Hamcrest/Core/SetTest.php
index aa5e4e7..35ae3b9 100644
--- a/tests/Hamcrest/Core/SetTest.php
+++ b/tests/Hamcrest/Core/SetTest.php
@@ -7,7 +7,7 @@ class SetTest extends \Hamcrest\AbstractMatcherTest
     public static $_classProperty;
     public $_instanceProperty;
 
-    protected function setUp()
+    protected function setUp(): void
     {
         self::$_classProperty = null;
         unset($this->_instanceProperty);
diff --git a/tests/Hamcrest/FeatureMatcherTest.php b/tests/Hamcrest/FeatureMatcherTest.php
index 7543294..dd912c8 100644
--- a/tests/Hamcrest/FeatureMatcherTest.php
+++ b/tests/Hamcrest/FeatureMatcherTest.php
@@ -34,7 +34,7 @@ class FeatureMatcherTest extends \Hamcrest\AbstractMatcherTest
 
     private $_resultMatcher;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_resultMatcher = $this->_resultMatcher();
     }
diff --git a/tests/Hamcrest/MatcherAssertTest.php b/tests/Hamcrest/MatcherAssertTest.php
index dc12fba..ee287fb 100644
--- a/tests/Hamcrest/MatcherAssertTest.php
+++ b/tests/Hamcrest/MatcherAssertTest.php
@@ -6,7 +6,7 @@ use PHPUnit\Framework\TestCase;
 class MatcherAssertTest extends TestCase
 {
 
-    protected function setUp()
+    protected function setUp(): void
     {
         \Hamcrest\MatcherAssert::resetCount();
     }
diff --git a/tests/Hamcrest/StringDescriptionTest.php b/tests/Hamcrest/StringDescriptionTest.php
index bc322ba..fe77c32 100644
--- a/tests/Hamcrest/StringDescriptionTest.php
+++ b/tests/Hamcrest/StringDescriptionTest.php
@@ -23,7 +23,7 @@ class StringDescriptionTest extends TestCase
 
     private $_description;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_description = new \Hamcrest\StringDescription();
     }
diff --git a/tests/Hamcrest/Text/IsEqualIgnoringWhiteSpaceTest.php b/tests/Hamcrest/Text/IsEqualIgnoringWhiteSpaceTest.php
index 6c2304f..4c45146 100644
--- a/tests/Hamcrest/Text/IsEqualIgnoringWhiteSpaceTest.php
+++ b/tests/Hamcrest/Text/IsEqualIgnoringWhiteSpaceTest.php
@@ -6,7 +6,7 @@ class IsEqualIgnoringWhiteSpaceTest extends \Hamcrest\AbstractMatcherTest
 
     private $_matcher;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_matcher = \Hamcrest\Text\IsEqualIgnoringWhiteSpace::equalToIgnoringWhiteSpace(
             "Hello World   how\n are we? "
diff --git a/tests/Hamcrest/Text/StringContainsIgnoringCaseTest.php b/tests/Hamcrest/Text/StringContainsIgnoringCaseTest.php
index 3b5b08e..f69efc8 100644
--- a/tests/Hamcrest/Text/StringContainsIgnoringCaseTest.php
+++ b/tests/Hamcrest/Text/StringContainsIgnoringCaseTest.php
@@ -8,7 +8,7 @@ class StringContainsIgnoringCaseTest extends \Hamcrest\AbstractMatcherTest
 
     private $_stringContains;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_stringContains = \Hamcrest\Text\StringContainsIgnoringCase::containsStringIgnoringCase(
             strtolower(self::EXCERPT)
diff --git a/tests/Hamcrest/Text/StringContainsInOrderTest.php b/tests/Hamcrest/Text/StringContainsInOrderTest.php
index 0be7062..f8bf638 100644
--- a/tests/Hamcrest/Text/StringContainsInOrderTest.php
+++ b/tests/Hamcrest/Text/StringContainsInOrderTest.php
@@ -6,7 +6,7 @@ class StringContainsInOrderTest extends \Hamcrest\AbstractMatcherTest
 
     private $_m;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_m = \Hamcrest\Text\StringContainsInOrder::stringContainsInOrder(array('a', 'b', 'c'));
     }
diff --git a/tests/Hamcrest/Text/StringContainsTest.php b/tests/Hamcrest/Text/StringContainsTest.php
index 203fd91..18323f5 100644
--- a/tests/Hamcrest/Text/StringContainsTest.php
+++ b/tests/Hamcrest/Text/StringContainsTest.php
@@ -8,7 +8,7 @@ class StringContainsTest extends \Hamcrest\AbstractMatcherTest
 
     private $_stringContains;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_stringContains = \Hamcrest\Text\StringContains::containsString(self::EXCERPT);
     }
diff --git a/tests/Hamcrest/Text/StringEndsWithTest.php b/tests/Hamcrest/Text/StringEndsWithTest.php
index fffa3c9..473b29e 100644
--- a/tests/Hamcrest/Text/StringEndsWithTest.php
+++ b/tests/Hamcrest/Text/StringEndsWithTest.php
@@ -8,7 +8,7 @@ class StringEndsWithTest extends \Hamcrest\AbstractMatcherTest
 
     private $_stringEndsWith;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_stringEndsWith = \Hamcrest\Text\StringEndsWith::endsWith(self::EXCERPT);
     }
diff --git a/tests/Hamcrest/Text/StringStartsWithTest.php b/tests/Hamcrest/Text/StringStartsWithTest.php
index fc3761b..6c57bef 100644
--- a/tests/Hamcrest/Text/StringStartsWithTest.php
+++ b/tests/Hamcrest/Text/StringStartsWithTest.php
@@ -8,7 +8,7 @@ class StringStartsWithTest extends \Hamcrest\AbstractMatcherTest
 
     private $_stringStartsWith;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_stringStartsWith = \Hamcrest\Text\StringStartsWith::startsWith(self::EXCERPT);
     }
diff --git a/tests/Hamcrest/Xml/HasXPathTest.php b/tests/Hamcrest/Xml/HasXPathTest.php
index 6774887..f51264e 100644
--- a/tests/Hamcrest/Xml/HasXPathTest.php
+++ b/tests/Hamcrest/Xml/HasXPathTest.php
@@ -7,7 +7,7 @@ class HasXPathTest extends \Hamcrest\AbstractMatcherTest
     protected static $doc;
     protected static $html;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         self::$xml = <<<XML
 <?xml version="1.0"?>
